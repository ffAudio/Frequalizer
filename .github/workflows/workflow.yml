name: CMake

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        os: [macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Codesign (macos)
      if: runner.os == 'MacOS'
      working-directory: ${{runner.workspace}}/build
      shell: bash
      env: 
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      run: |
        echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
        RANDOM_PWD=`date | md5`
        security create-keychain -p ${RANDOM_PWD} build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p ${RANDOM_PWD} build.keychain
        security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k ${RANDOM_PWD} build.keychain

        /usr/bin/codesign --force -s "Developer ID Application" frequalizer_artefacts/Release/AU/Frequalizer.component -v
        /usr/bin/codesign --force -s "Developer ID Application" frequalizer_artefacts/Release/VST3/Frequalizer.vst3 -v

    - name: Package (macos)
      if: runner.os == 'MacOS'
      working-directory: ${{runner.workspace}}/build
      shell: bash
      env:
        BUNDLE: com.foleysfinest.frequalizer
        VERSION: 1.1.0
        DIST_DIR: ${{runner.workspace}}/build/frequalizer_artefacts/Release
        INSTALL_DIR: /Library/Audio/Plug-Ins
      run: |
        pkgbuild --identifier ${BUNDLE}.au --version ${VERSION} --component ${DIST_DIR}/AU/Frequalizer.component \
        --install-location "${INSTALL_DIR}/Components" ${DIST_DIR}/Frequalizer.au.pkg 

        pkgbuild --identifier ${BUNDLE}.vst3 --version ${VERSION} --component ${DIST_DIR}/VST3/Frequalizer.vst3 \
        --install-location "${INSTALL_DIR}/VST3" ${DIST_DIR}/Frequalizer.vst3.pkg 

        productbuild --synthesize \
        --package "${DIST_DIR}/Frequalizer.au.pkg" \
        --package "${DIST_DIR}/Frequalizer.vst3.pkg" \
        distribution.xml

        productbuild --distribution distribution.xml --package-path ${DIST_DIR} ${DIST_DIR}/Frequalizer.pkg

    - name: InnoSetup Installer (Windows)
      if: runner.os == 'Windows'
      working-directory: ${{runner.workspace}}/build
      run: |
        "%programfiles(x86)%\Inno Setup 6\iscc.exe" /DBuildDir="${{runner.workspace}}\build\frequalizer_artefacts\Release" "${{runner.workspace}}\Frequalizer\Resources\InnoSetup.iss"
      shell: cmd

    - name: 'Upload Artifact (MacOS)'
      if: runner.os == 'MacOS'
      uses: actions/upload-artifact@v2
      with:
        name: Frequalizer (MacOS)
        path: ${{runner.workspace}}/build/frequalizer_artefacts/Release/Frequalizer.pkg

    - name: 'Upload Artifact (Windows)'
      if: runner.os == 'MacOS'
      uses: actions/upload-artifact@v2
      with:
        name: Frequalizer (Windows)
        path: ${{runner.workspace}}\build\frequalizer_artefacts\Release\Output\Frequalizer_WIN.exe

